@using System.ComponentModel.DataAnnotations
@using MediReserva.Models
@using Microsoft.AspNetCore.Components.Forms
@using MudBlazor
@inject IEspecialidadService EspecialidadService
@inject IMedicoService MedicoService
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<MudMessageBox @ref="_messageBox"
               Title="@(_medico.Id == 0 ? "Crear Médico" : "Editar Médico")"
               CancelText="Cancelar">
    <MessageContent>
        <EditForm Model="_medico" OnValidSubmit="Guardar">
            <DataAnnotationsValidator />
            <MudStack Spacing="3">
                <MudTextField Label="Nombre" @bind-Value="_medico.Nombre" Required="true" />
                <MudTextField Label="Email" @bind-Value="_medico.Email" Required="true" />
                <MudTextField Label="Teléfono" @bind-Value="_medico.Telefono" />
                <MudSelect Label="Consultorio" @bind-Value="_medico.Consultorio" Required="true">
                    @foreach (var c in Consultorios)
                    {
                        <MudSelectItem Value="@c">@c</MudSelectItem>
                    }
                </MudSelect>
                <MudSelect Label="Especialidad" @bind-Value="_medico.EspecialidadId" Required="true">
                    @foreach (var e in Especialidades)
                    {
                        <MudSelectItem Value="@e.Id">@e.Nombre</MudSelectItem>
                    }
                </MudSelect>
            </MudStack>
        </EditForm>
    </MessageContent>
    <YesButton>
        <MudButton Color="Color.Primary" OnClick="Guardar">Guardar</MudButton>
    </YesButton>
</MudMessageBox>

@code {
    private MudMessageBox? _messageBox;
    private Medico _medico = new();
    private List<Especialidad> Especialidades = new();
    private List<string> Consultorios = new() { "105E", "103C", "104D", "102B", "101A" };

    [Parameter]
    public Medico MedicoParametro { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        _medico = new Medico
            {
                Id = MedicoParametro.Id,
                Nombre = MedicoParametro.Nombre,
                Email = MedicoParametro.Email,
                Telefono = MedicoParametro.Telefono,
                Consultorio = MedicoParametro.Consultorio,
                EspecialidadId = MedicoParametro.EspecialidadId
            };

        Especialidades = await EspecialidadService.GetAllAsync();
    }

    public async Task<bool?> ShowAsync(DialogOptions options)
    {
        return await _messageBox!.ShowAsync(options);
    }

    private async Task Guardar()
    {
        try
        {
            if (_medico.Id == 0)
            {
                await MedicoService.AddAsync(_medico);
                Snackbar.Add("Médico creado con éxito", Severity.Success);
            }
            else
            {
                await MedicoService.UpdateAsync(_medico);
                Snackbar.Add("Médico actualizado con éxito", Severity.Success);
            }
            _messageBox?.Close(); 

            await Task.Delay(1);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error: {ex.Message}", Severity.Error);
        }
    }
}